# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Container Scanning customization: https://docs.gitlab.com/ee/user/application_security/container_scanning/#customizing-the-container-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence
stages:
  - test
  - publish

sast:
  stage: test

include:
  - template: Security/SAST.gitlab-ci.yml

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
    - if: $CI_COMMIT_TAG

.jvm:
  image: archlinux:base
  before_script:
    - pacman -Syu --noconfirm git jre-openjdk-headless
  variables:
    JAVA_HOME: /usr/lib/jvm/default

.ios:
  image: macos-12-xcode-13

  tags:
    - shared-macos-amd64

publish:
  extends: [ .jvm ]
  stage: publish
  script:
    - >
      ./gradlew 
      logger:publishAllPublicationsToGitLabRepository
      progress:publishAllPublicationsToGitLabRepository
      progress-coroutines:publishAllPublicationsToGitLabRepository
      state:publishAllPublicationsToGitLabRepository
      cache:publishAllPublicationsToGitLabRepository
      backbone:publishAllPublicationsToGitLabRepository
      logger:publishAllPublicationsToGitLabRepository
      spine:publishAllPublicationsToGitLabRepository
      spine-ktor:publishAllPublicationsToGitLabRepository
      spine-ktor:spine-ktor-client:publishAllPublicationsToGitLabRepository
      spine-ktor:spine-ktor-server:publishAllPublicationsToGitLabRepository
  rules:
    - if: $CI_COMMIT_TAG
  interruptible: false

publish:ios:
  extends: [ .ios ]
  stage: publish
  script:
    - >
      ./gradlew
      logger:publishIosArm64PublicationToGitLabRepository
      progress:publishIosArm64PublicationToGitLabRepository
      progress-coroutines:publishIosArm64PublicationToGitLabRepository
      state:publishIosArm64PublicationToGitLabRepository
      cache:publishIosArm64PublicationToGitLabRepository
      backbone:publishIosArm64PublicationToGitLabRepository
      logger:publishIosArm64PublicationToGitLabRepository
    - >
      ./gradlew
      logger:publishIosSimulatorArm64PublicationToGitLabRepository
      progress:publishIosSimulatorArm64PublicationToGitLabRepository
      progress-coroutines:publishIosSimulatorArm64PublicationToGitLabRepository
      state:publishIosSimulatorArm64PublicationToGitLabRepository
      cache:publishIosSimulatorArm64PublicationToGitLabRepository
      backbone:publishIosSimulatorArm64PublicationToGitLabRepository
      logger:publishIosSimulatorArm64PublicationToGitLabRepository
    - >
      ./gradlew
      logger:publishIosX64PublicationToGitLabRepository
      progress:publishIosX64PublicationToGitLabRepository
      progress-coroutines:publishIosX64PublicationToGitLabRepository
      state:publishIosX64PublicationToGitLabRepository
      cache:publishIosX64PublicationToGitLabRepository
      backbone:publishIosX64PublicationToGitLabRepository
      logger:publishIosX64PublicationToGitLabRepository
  rules:
    - if: $CI_COMMIT_TAG
  interruptible: false

.test-jvm:
  extends: [ .jvm ]
  variables:
    module_path: $module
  script:
    - ./gradlew $module:koverReport $module:koverVerify  # implies running the JVM tests
  after_script:
    - mkdir -p test-report-$module_path
    - mv $module_path/build/reports/tests/jvmTest test-report-$module_path/test
    - mv $module_path/build/reports/kover/html test-report-$module_path/coverage
    - mv $module_path/build/reports/kover/xml/report.xml test-report-$module_path/coverage.xml
    - values=$(cat test-report-$module_path/coverage.xml | tail -7 | head -5 | grep 'INSTRUCTION' | cut -d ' ' -f 3,4 | sed 's/missed="//;s/" covered="/ /;s/"\/>//')
    - missed=$(<<<$values cut -d ' ' -f 1)
    - covered=$(<<<$values cut -d ' ' -f 2)
    - echo "Coverage $(($covered * 100 / ($covered + $missed)))%"
  coverage: '/Coverage \d+%/'
  artifacts:
    paths:
      - test-report-$module_path
    expose_as: 'Test and coverage report'
    reports:
      junit: $module_path/build/test-results/jvmTest/**.xml
    when: always
  interruptible: true

.test-jvm-convert-coverage:
  image: registry.gitlab.com/haynes/jacoco2cobertura:1.0.8
  variables:
    module_path: $module
  script:
    - python /opt/cover2cover.py test-report-$module_path/coverage.xml $CI_PROJECT_DIR/$module_path/src/main/kotlin/ > cobertura.xml
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: cobertura.xml
  interruptible: true

logger:test:jvm:
  extends: [ .test-jvm ]
  variables:
    module: logger

logger:convert-coverage:
  extends: [ .test-jvm-convert-coverage ]
  needs:
    - job: logger:test:jvm
      artifacts: true
  variables:
    module: logger

progress:test:jvm:
  extends: [ .test-jvm ]
  variables:
    module: progress

progress:convert-coverage:
  extends: [ .test-jvm-convert-coverage ]
  needs:
    - job: progress:test:jvm
      artifacts: true
  variables:
    module: progress

progress-coroutines:test:jvm:
  extends: [ .test-jvm ]
  variables:
    module: progress-coroutines

progress-coroutines:convert-coverage:
  extends: [ .test-jvm-convert-coverage ]
  needs:
    - job: progress-coroutines:test:jvm
      artifacts: true
  variables:
    module: progress-coroutines

state:test:jvm:
  extends: [ .test-jvm ]
  variables:
    module: state

state:convert-coverage:
  extends: [ .test-jvm-convert-coverage ]
  needs:
    - job: state:test:jvm
      artifacts: true
  variables:
    module: state

cache:test:jvm:
  extends: [ .test-jvm ]
  variables:
    module: cache

cache:convert-coverage:
  extends: [ .test-jvm-convert-coverage ]
  needs:
    - job: cache:test:jvm
      artifacts: true
  variables:
    module: cache

backbone:test:jvm:
  extends: [ .test-jvm ]
  variables:
    module: backbone

backbone:convert-coverage:
  extends: [ .test-jvm-convert-coverage ]
  needs:
    - job: backbone:test:jvm
      artifacts: true
  variables:
    module: backbone

spine:test:jvm:
  extends: [ .test-jvm ]
  variables:
    module: spine

spine:convert-coverage:
  extends: [ .test-jvm-convert-coverage ]
  needs:
    - job: spine:test:jvm
      artifacts: true
  variables:
    module: spine

spine-ktor:test:jvm:
  extends: [ .test-jvm ]
  variables:
    module: spine-ktor:spine-ktor-server
    module_path: spine-ktor/spine-ktor-server

spine-ktor:convert-coverage:
  extends: [ .test-jvm-convert-coverage ]
  needs:
    - job: spine-ktor:test:jvm
      artifacts: true
  variables:
    module: spine-ktor:spine-ktor-server
    module_path: spine-ktor/spine-ktor-server

test:ios:
  extends: [ .ios ]

  script:
    - >
      ./gradlew
      iosSimulatorArm64Test

dokka:
  extends: [ .jvm ]
  needs: [ ]
  script:
    - ./gradlew dokkaHtmlMultiModule
    - mv build/dokka/htmlMultiModule documentation
  artifacts:
    paths:
      - documentation
    expose_as: "Documentation"
  interruptible: true

pages:
  image: alpine:latest
  stage: publish
  needs:
    - job: dokka
      artifacts: true
  script:
    - mkdir -p public
    - mv documentation public
  artifacts:
    paths:
      - public
  rules:
    - if: $CI_COMMIT_TAG
  interruptible: false
