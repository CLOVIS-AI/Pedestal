stages:
  - docker
  - build
  - test
  - deploy

include:
  - remote: https://gitlab.com/opensavvy/ci-templates/-/raw/main/version.gitlab-ci.yml
  - remote: https://gitlab.com/opensavvy/ci-templates/-/raw/main/mirror.gitlab-ci.yml
  - remote: https://gitlab.com/opensavvy/ci-templates/-/raw/main/gradle.gitlab-ci.yml
  - remote: https://gitlab.com/opensavvy/ci-templates/-/raw/main/docker.gitlab-ci.yml

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_PIPELINE_SOURCE == 'schedule'
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
    - if: $CI_COMMIT_TAG

.ios:
  image: macos-13-xcode-14
  before_script:
    - xcodebuild -downloadPlatform iOS
  tags:
    - saas-macos-medium-m1

# region Environment and dependencies

chromium:build:
  extends: [ .os.docker.build ]
  needs: [ ]
  stage: docker

  variables:
    dockerfile: .gitlab/chromium.dockerfile
    context: .gitlab
    image: chromium

  interruptible: true

chromium:publish:
  extends: [ .os.docker.rename ]
  needs: [ chromium:build ]
  stage: deploy

  variables:
    image: chromium

  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH

  interruptible: true

# endregion
# region Check

check-jvm:
  extends: [ .os.gradle ]
  needs: [ os.version ]
  stage: test

  script:
    - >
      ./gradlew koverMergedHtmlReport koverVerify --continue
      -PappVersion=$project_version
    - mv build/reports/kover/merged/html coverage

  artifacts:
    paths:
      - coverage
  environment:
    name: review/$CI_COMMIT_REF_SLUG/documentation
    url: https://$CI_PROJECT_NAMESPACE.$CI_PAGES_DOMAIN/-/$CI_PROJECT_NAME/-/jobs/$CI_JOB_ID/artifacts/coverage/index.html
    deployment_tier: development
    auto_stop_in: 1 week
  interruptible: true

check-ios:
  extends: [ .os.gradle, .ios ]
  needs: [ os.version ]
  stage: test

  script:
    - >
      ./gradlew iosSimulatorArm64Test --continue
      -PappVersion=$project_version

  interruptible: true

check-js:
  extends: [ .os.gradle ]
  image: $CI_REGISTRY_IMAGE/chromium:build-$CI_PIPELINE_IID
  stage: test
  needs: [ chromium:build, os.version ]

  script:
    - >
      ./gradlew jsBrowserTest --continue
      -PappVersion=$project_version
        
  interruptible: true

# endregion
# region Publishing

publish-maven:gitlab:
  extends: [ .os.gradle ]
  needs: [ os.version, check-jvm, check-ios, check-js ]
  stage: deploy

  script:
    - >
      ./gradlew publishAllPublicationsToGitLabRepository
      -PappVersion=$project_version

  interruptible: false
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
      when: never
    - if: $PUBLISH_MAVEN == "manual" || $PUBLISH_MAVEN_GITLAB == "manual"
      when: manual
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
    - if: $CI_COMMIT_TAG

publish-maven:central:
  extends: [ .os.gradle ]
  needs: [ os.version, check-jvm, check-ios, check-js ]
  stage: deploy

  script:
    - export SIGNING_KEY_RING=$(mktemp)
    - <"$SIGNING_KEY_RING_B64" base64 -d >"$SIGNING_KEY_RING"
    - >
      ./gradlew publishAllPublicationsToSonatypeRepository
      -PappVersion=$project_version

  interruptible: false
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
      when: never
    - if: $OSSRH_USERNAME == null || $OSSRH_PASSWORD == null
      when: never
    - if: $PUBLISH_MAVEN == "manual" || $PUBLISH_MAVEN_CENTRAL == "manual"
      when: manual
    - if: $CI_COMMIT_TAG

publish-maven:ios:gitlab:
  extends: [ .ios ]
  needs: [ os.version, check-jvm, check-ios, check-js ]
  stage: deploy

  script:
    - >
      ./gradlew
      publishIosArm64PublicationToGitLabRepository
      publishIosSimulatorArm64PublicationToGitLabRepository
      publishIosX64PublicationToGitLabRepository
      -PappVersion=$project_version

  interruptible: false
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
      when: never
    - if: $PUBLISH_MAVEN == "manual" || $PUBLISH_MAVEN_GITLAB == "manual"
      when: manual
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
    - if: $CI_COMMIT_TAG

publish-maven:ios:central:
  extends: [ .ios ]
  needs: [ os.version, check-jvm, check-ios, check-js ]
  stage: deploy

  script:
    - export SIGNING_KEY_RING=$(mktemp)
    - <"$SIGNING_KEY_RING_B64" base64 -d >"$SIGNING_KEY_RING"
    - >
      ./gradlew 
      publishIosArm64PublicationToSonatypeRepository
      publishIosSimulatorArm64PublicationToSonatypeRepository
      publishIosX64PublicationToSonatypeRepository
      -PappVersion=$project_version

  interruptible: false
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
      when: never
    - if: $OSSRH_USERNAME == null || $OSSRH_PASSWORD == null
      when: never
    - if: $PUBLISH_MAVEN == "manual" || $PUBLISH_MAVEN_CENTRAL == "manual"
      when: manual
    - if: $CI_COMMIT_TAG

# endregion
# region Documentation

dokka:
  extends: [ .os.gradle ]
  needs: [ os.version ]
  stage: build

  script:
    - >
      ./gradlew dokkaHtmlMultiModule
      -PappVersion=$project_version
    - mv build/dokka/htmlMultiModule documentation

  artifacts:
    paths:
      - documentation
  environment:
    name: review/$CI_COMMIT_REF_SLUG/documentation
    url: https://$CI_PROJECT_NAMESPACE.$CI_PAGES_DOMAIN/-/$CI_PROJECT_NAME/-/jobs/$CI_JOB_ID/artifacts/documentation/index.html
    deployment_tier: development
    auto_stop_in: 1 week
  interruptible: true

pages:
  image: alpine:latest
  stage: deploy
  needs:
    - job: dokka
      artifacts: true
  script:
    - mkdir -p public
    - mv documentation public
  artifacts:
    paths:
      - public
  rules:
    - if: $CI_COMMIT_TAG
  interruptible: false

# endregion
# region Automatically mirror the previous layer of the playground

mirror-playground:
  stage: deploy
  extends: [ .os.mirror ]
  needs: [ ]

  variables:
    url: "$playground_parent"
    name: "$playground_parent_name"
    key: "$playground_mirroring_key"
    key_public: "$playground_mirroring_key_public"

  rules:
    - if: $playground_parent == null || $playground_parent_name == null
      when: never
    - if: $playground_mirroring_key == null || $playground_mirroring_key_public == null
      when: never
    - if: $CI_PIPELINE_SOURCE == 'schedule'
    - when: manual
      allow_failure: true

# endregion
