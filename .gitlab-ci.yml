stages:
  - docker
  - build
  - test
  - deploy

include:
  - remote: https://gitlab.com/opensavvy/ci-templates/-/raw/main/version.gitlab-ci.yml
  - remote: https://gitlab.com/opensavvy/ci-templates/-/raw/main/mirror.gitlab-ci.yml
  - remote: https://gitlab.com/opensavvy/ci-templates/-/raw/main/gradle.gitlab-ci.yml
  - remote: https://gitlab.com/opensavvy/ci-templates/-/raw/main/docker.gitlab-ci.yml

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_PIPELINE_SOURCE == 'schedule'
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
    - if: $CI_COMMIT_TAG

.ios:
  image: macos-12-xcode-13

  tags:
    - saas-macos-medium-m1

# region Check

check-jvm:
  extends: [ .os.gradle ]
  needs: [ os.version ]
  stage: test

  script:
    - >
      ./gradlew koverMergedHtmlReport koverVerify
      -PappVersion=$project_version
    - mv build/reports/kover/merged/html coverage

  artifacts:
    paths:
      - coverage
  environment:
    name: review/$CI_COMMIT_REF_SLUG/documentation
    url: https://$CI_PROJECT_NAMESPACE.$CI_PAGES_DOMAIN/-/$CI_PROJECT_NAME/-/jobs/$CI_JOB_ID/artifacts/coverage/index.html
    deployment_tier: development
    auto_stop_in: 1 week
  interruptible: true

check-ios:
  extends: [ .os.gradle ]
  needs: [ os.version ]
  stage: test

  script:
    - >
      ./gradlew iosSimulatorArm64Test
      -PappVersion=$project_version

  interruptible: true

# endregion
# region Documentation

dokka:
  extends: [ .os.gradle ]
  needs: [ os.version ]
  stage: build

  script:
    - >
      ./gradlew dokkaHtmlMultiModule
      -PappVersion=$project_version
    - mv build/dokka/htmlMultiModule documentation

  artifacts:
    paths:
      - documentation
  environment:
    name: review/$CI_COMMIT_REF_SLUG/documentation
    url: https://$CI_PROJECT_NAMESPACE.$CI_PAGES_DOMAIN/-/$CI_PROJECT_NAME/-/jobs/$CI_JOB_ID/artifacts/documentation/index.html
    deployment_tier: development
    auto_stop_in: 1 week
  interruptible: true

pages:
  image: alpine:latest
  stage: deploy
  needs:
    - job: dokka
      artifacts: true
  script:
    - mkdir -p public
    - mv documentation public
  artifacts:
    paths:
      - public
  rules:
    - if: $CI_COMMIT_TAG
  interruptible: false

# endregion
# region Automatically mirror the previous layer of the playground

mirror-playground:
  stage: deploy
  extends: [ .os.mirror ]
  needs: [ ]

  variables:
    url: "$playground_parent"
    name: "$playground_parent_name"
    key: "$playground_mirroring_key"
    key_public: "$playground_mirroring_key_public"

  rules:
    - if: $playground_parent == null || $playground_parent_name == null
      when: never
    - if: $playground_mirroring_key == null || $playground_mirroring_key_public == null
      when: never
    - if: $CI_PIPELINE_SOURCE == 'schedule'
    - when: manual
      allow_failure: true

# endregion
